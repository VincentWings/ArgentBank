swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  # ✅ User Module
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  # ✅ Accounts Module
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get all user accounts
      description: Returns a list of all accounts owned by the authenticated user.
      produces:
        - application/json
      responses:
        '200':
          description: Accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /user/accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Get details of a specific account
      description: Returns details of a specific account belonging to the authenticated user.
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Account ID
      produces:
        - application/json
      responses:
        '200':
          description: Account details retrieved successfully
          schema:
            $ref: '#/definitions/Account'
        '401':
          description: Unauthorized
        '404':
          description: Account not found

  # ✅ Transactions Module
  /user/accounts/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions grouped by account type
      description: Returns all transactions grouped by type of account, allowing filtering by the current month.
      parameters:
        - name: month
          in: query
          required: false
          type: string
          description: Filter transactions by month (YYYY-MM format)
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully, grouped by account type
          schema:
            $ref: '#/definitions/TransactionsGroupedResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /user/accounts/{id}/transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get a specific transaction by its ID
      description: Returns the details of a specific transaction within a given account.
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Account ID
        - name: transactionID
          in: path
          required: true
          type: string
          description: Transaction ID
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized
        '404':
          description: Transaction not found

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a transaction
      description: Updates the category or notes of a transaction.
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Account ID
        - name: transactionID
          in: path
          required: true
          type: string
          description: Transaction ID
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid input
        '404':
          description: Transaction not found

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete category or notes of a transaction
      description: Deletes only the category or notes of a transaction, keeping the transaction itself.
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: Account ID
        - name: transactionID
          in: path
          required: true
          type: string
          description: Transaction ID
      produces:
        - application/json
      responses:
        '200':
          description: Category or notes deleted successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '404':
          description: Transaction not found

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  # ✅ User Models
  User:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      balance:
        type: number
        format: float

  AccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/Account'

  Transaction:
    type: object
    properties:
      id:
        type: string
      accountId:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
        format: float
      category:
        type: string
      notes:
        type: string

  UpdateTransaction:
    type: object
    properties:
      category:
        type: string
        description: The category of the transaction
      notes:
        type: string
        description: Additional notes for the transaction

  TransactionsGroupedResponse:
    type: object
    properties:
      transactions:
        type: array
        items:
          type: object
          properties:
            accountType:
              type: string
            transactions:
              type: array
              items:
                $ref: '#/definitions/Transaction'